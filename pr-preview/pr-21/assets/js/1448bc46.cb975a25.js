"use strict";(self.webpackChunkconnxio_docs=self.webpackChunkconnxio_docs||[]).push([[9074],{73644:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=t(85893),a=t(11151);const o={mdx:{format:"md"},date:"2023-01-17T20:00"},s="1.9.2",r={permalink:"/docs/changelog/1.9.2",source:"@site/changelog/source/1.9.2.md",title:"1.9.2",description:"New Features",date:"2023-01-17T20:00:00.000Z",formattedDate:"January 17, 2023",tags:[],hasTruncateMarker:!0,authors:[],frontMatter:{mdx:{format:"md"},date:"2023-01-17T20:00"},unlisted:!1,prevItem:{title:"1.9.3",permalink:"/docs/changelog/1.9.3"},nextItem:{title:"1.9.1",permalink:"/docs/changelog/1.9.1"},listPageLink:"/docs/changelog/"},l={authorsImageUrls:[]},d=[{value:"\ud83d\ude80 New Features",id:"rocket-new-features",level:2},{value:"\ud83d\udc1b Bug Fix",id:"bug-bug-fix",level:2},{value:"\ud83d\udc85 Polish",id:"nail_care-polish",level:2}];function c(n){const e={code:"code",h2:"h2",li:"li",ul:"ul",...(0,a.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"rocket-new-features",children:"\ud83d\ude80 New Features"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"Environment variables"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"many of you have requested environment variables to enable switching between environments without having to hold the variables outside Connxio. This new functionality adds a new menu option called Environment Variables."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"bug-bug-fix",children:"\ud83d\udc1b Bug Fix"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"HotFix (23.01.23):Fixed management API not returning tuned off integrations"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"management api was throwing 400 on non enabled integrations from get endpoint. Fixed to return all integrations"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"HotFix (23.01.23):Fixed management API not returning non api integrations"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"management api was throwing 400 on non api and event-grid integrations. Fixed to return all integrations"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"HotFix (23.01.23):Fixed management API translating env vars"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"management api was translating environment variables when it should be returning the non translated value."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"nail_care-polish",children:"\ud83d\udc85 Polish"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"Added process lock to inbound adapters"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"added new option for locking on process for inbound adapters with locking functionality. This affects Azure Storage, REST and (S)ftp adapters."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"Added filepath to metadata for (S)FTP"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"The filepath field contains the full path including the filename to the file"}),"\n"]}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>r,a:()=>s});var i=t(67294);const a={},o=i.createContext(a);function s(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);