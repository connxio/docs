openapi: 3.0.1
info:
  title: Connxio API
  description: Messaging and management Api for Connxio
  contact:
    name: Evidi
    url: https://www.evidi.com
    email: support@connxio.no
  version: "2.0"
paths:
  /api/v2/integrations:
    get:
      tags:
        - Integrations
      summary: Gets a list of all integrations
      responses:
        "200":
          description: The list of integrations for the subscription
          content:
            text/plain; x-api-version=2.0:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IntegrationConfig"
            application/json; x-api-version=2.0:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IntegrationConfig"
            text/json; x-api-version=2.0:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IntegrationConfig"
            application/xml; x-api-version=2.0:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IntegrationConfig"
            text/xml; x-api-version=2.0:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IntegrationConfig"
        "502":
          description: Could not contact internal services. Please try again later or contact our support department
    post:
      tags:
        - Integrations
      summary: Creates or updates an integration
      requestBody:
        description: ""
        content:
          application/json; x-api-version=2.0:
            schema:
              $ref: "#/components/schemas/IntegrationPostRequest"
          text/json; x-api-version=2.0:
            schema:
              $ref: "#/components/schemas/IntegrationPostRequest"
          application/*+json; x-api-version=2.0:
            schema:
              $ref: "#/components/schemas/IntegrationPostRequest"
          application/xml; x-api-version=2.0:
            schema:
              $ref: "#/components/schemas/IntegrationPostRequest"
          text/xml; x-api-version=2.0:
            schema:
              $ref: "#/components/schemas/IntegrationPostRequest"
          application/*+xml; x-api-version=2.0:
            schema:
              $ref: "#/components/schemas/IntegrationPostRequest"
      responses:
        "200":
          description: The updated integration configuration
          content:
            text/plain; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
            application/json; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
            text/json; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
            application/xml; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
            text/xml; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
        "201":
          description: The created integration configuration
        "400":
          description: Request did not pass validation. Check your request and error message.
        "502":
          description: Could not contact internal services. Please try again later or contact our support department
  "/api/v2/integrations/{configCorrelationId}":
    get:
      tags:
        - Integrations
      summary: Find integration by ID
      parameters:
        - name: configCorrelationId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The integration corresponding to the ID
          content:
            text/plain; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
            application/json; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
            text/json; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
            application/xml; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
            text/xml; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
        "404":
          description: A integration corresponding to the ID could not be found
        "502":
          description: Could not contact internal services. Please try again later or contact our support department
    delete:
      tags:
        - Integrations
      summary: Deletes an integration
      parameters:
        - name: configCorrelationId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
            application/json; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
            text/json; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
            application/xml; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
            text/xml; x-api-version=2.0:
              schema:
                $ref: "#/components/schemas/IntegrationConfig"
        "204":
          description: Integration configuration deleted
        "400":
          description: Request did not pass validation. Check your request and error message.
        "502":
          description: Could not contact internal services. Please try again later or contact our support department
  "/api/v2/messages/{configCorrelationId}":
    post:
      tags:
        - Messages
      summary: Sends a single message to Connxio
      parameters:
        - name: MessageEncoding
          in: query
          schema:
            type: string
        - name: InterchangeId
          in: query
          schema:
            type: string
        - name: FileName
          in: query
          schema:
            type: string
        - name: configCorrelationId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
          application/json:
            schema:
              type: string
            examples:
              Example request:
                value: '{"foo":"bar"}'
          application/xml:
            schema:
              type: string
            examples:
              Example request:
                value: "<root>\n  <Foo>bar</Foo>\n</root>"
        required: true
      responses:
        "200":
          description: The message was validated and sent to the Connxio engine
        "400":
          description: The supplied message or metadata did not pass validation
        "502":
          description: Could not contact internal services. Please try again later or contact our support department
  "/api/v2/messages/{configCorrelationId}/batch":
    post:
      tags:
        - Messages
      summary: Sends a batch of messages to Connxio
      parameters:
        - name: configCorrelationId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/MessageBodyRequest"
            examples:
              Array of MessageBodyRequest:
                value: '[{"messageEncoding":"string","interchangeId":"string","messageBody":"string","fileName":"string"}]'
          application/xml:
            schema:
              $ref: "#/components/schemas/ArrayOfMessageBodyRequest"
            examples:
              Array of MessageBodyRequest:
                value: "<ArrayOfMessageBodyRequest>\n  <MessageBodyRequest>\n    <MessageEncoding>string</MessageEncoding>\n    <InterchangeId>string</InterchangeId>\n    <MessageBody>string</MessageBody>\n    <FileName>string</FileName>\n  </MessageBodyRequest>\n</ArrayOfMessageBodyRequest>"
        required: true
      responses:
        "200":
          description: The message was validated and sent to the Connxio engine
        "400":
          description: The supplied message or metadata did not pass validation
        "502":
          description: Could not contact internal services. Please try again later or contact our support department
  "/api/v2/messages/{configCorrelationId}/eventgrid":
    post:
      tags:
        - Messages
      summary: Sends an Event Grid message to Connxio.
      parameters:
        - name: MessageEncoding
          in: query
          schema:
            type: string
        - name: InterchangeId
          in: query
          schema:
            type: string
        - name: FileName
          in: query
          schema:
            type: string
        - name: configCorrelationId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/EventGridMessage"
            examples:
              Array of EventGridMessage:
                value: '[{"topic":"string","subject":"string","eventType":"string","eventTime":"2023-03-31T19:29:12.612Z","id":"string","data":"string","dataVersion":"string","metadataVersion":"string"}]'
          application/xml:
            schema:
              $ref: "#/components/schemas/ArrayOfEventGridMessage"
            examples:
              Array of EventGridMessage:
                value: "<ArrayOfEventGridMessage>\n  <EventGridMessage>\n    <Topic>string</Topic>\n    <Subject>string</Subject>\n    <EventType>string</EventType>\n    <EventTime>2023-03-31T19:27:48.597Z</EventTime>\n    <Id>string</Id>\n    <Data>string</Data>\n    <DataVersion>string</DataVersion>\n    <MetadataVersion>string</MetadataVersion>\n  </EventGridMessage>\n</ArrayOfEventGridMessage>"
        required: true
      responses:
        "200":
          description: The message was validated and sent to the Connxio engine
        "400":
          description: The supplied message or metadata did not pass validation
        "502":
          description: Could not contact internal services. Please try again later or contact our support department
  /api/v2/subscriptions:
    get:
      tags:
        - Subscriptions
      summary: Returns a list of subscriptions
      responses:
        "200":
          description: The a of subscriptions
          content:
            text/plain; x-api-version=2.0:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConnXioSubscription"
            application/json; x-api-version=2.0:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConnXioSubscription"
            text/json; x-api-version=2.0:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConnXioSubscription"
            application/xml; x-api-version=2.0:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConnXioSubscription"
            text/xml; x-api-version=2.0:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConnXioSubscription"
        "502":
          description: Could not contact internal services. Please try again later or contact our support department
components:
  schemas:
    AckOptions:
      type: object
      properties:
        sendAck:
          type: boolean
        adapterType:
          type: string
          nullable: true
        connectionProperties:
          type: string
          nullable: true
        transformationSasUri:
          type: string
          nullable: true
        transformationId:
          type: string
          nullable: true
        transformationVersion:
          type: string
          nullable: true
        ackOutboundFormat:
          type: string
          nullable: true
        sendNegativeAck:
          type: boolean
      additionalProperties: false
    AckOptionsViewModel:
      type: object
      properties:
        sendAck:
          type: boolean
        adapterType:
          type: string
          nullable: true
        connectionProperties:
          type: string
          nullable: true
        transformationSasUri:
          type: string
          nullable: true
        transformationId:
          type: string
          nullable: true
        transformationVersion:
          type: string
          nullable: true
        ackOutboundFormat:
          type: string
          nullable: true
        sendNegativeAck:
          type: boolean
      additionalProperties: false
    AdapterConnectionProperties:
      type: object
      properties:
        adapterType:
          type: string
          nullable: true
        useProcessLock:
          type: boolean
        wrapperType:
          $ref: "#/components/schemas/WrapperType"
        mightBeWrapped:
          type: boolean
        adapterId:
          type: string
          nullable: true
        adapterName:
          type: string
          nullable: true
        connectionProperties:
          type: string
          nullable: true
        ackOptions:
          $ref: "#/components/schemas/AckOptions"
      additionalProperties: false
    AdapterConnectionPropertiesViewModel:
      required:
        - adapterType
        - connectionProperties
      type: object
      properties:
        adapterType:
          type: string
        adapterId:
          type: string
          nullable: true
        adapterName:
          type: string
          nullable: true
        connectionProperties:
          type: string
        ackOptions:
          $ref: "#/components/schemas/AckOptionsViewModel"
      additionalProperties: false
    AdapterType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
      type: integer
      format: int32
    ArrayOfEventGridMessage:
      type: object
      properties:
        eventGridMessages:
          type: array
          items:
            $ref: "#/components/schemas/EventGridMessage"
          nullable: true
      additionalProperties: false
    ArrayOfMessageBodyRequest:
      type: object
      properties:
        messageBodyRequests:
          type: array
          items:
            $ref: "#/components/schemas/MessageBodyRequest"
          nullable: true
      additionalProperties: false
    ConnXioSubscription:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        active:
          type: boolean
        companyId:
          type: string
          nullable: true
        companyName:
          type: string
          nullable: true
      additionalProperties: false
    Contract:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    EventGridMessage:
      type: object
      properties:
        topic:
          type: string
          nullable: true
        subject:
          type: string
          nullable: true
        eventType:
          type: string
          nullable: true
        eventTime:
          type: string
          format: date-time
        id:
          type: string
          nullable: true
        data:
          nullable: true
        dataVersion:
          type: string
          nullable: true
        metadataVersion:
          type: string
          nullable: true
      additionalProperties: false
    IntegrationConfig:
      type: object
      properties:
        configCorrelationId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        inboundConnection:
          $ref: "#/components/schemas/AdapterConnectionProperties"
        subIntegrations:
          type: array
          items:
            $ref: "#/components/schemas/SubIntegration"
          nullable: true
        companyName:
          type: string
          nullable: true
        companyId:
          type: string
          nullable: true
        subscriptionName:
          type: string
          nullable: true
        subscriptionId:
          type: string
          nullable: true
        transactionType:
          type: string
          nullable: true
        loggingWebhooks:
          type: array
          items:
            $ref: "#/components/schemas/LoggingWebhookConfig"
          nullable: true
        resendWebhooks:
          type: array
          items:
            $ref: "#/components/schemas/ResendWebhookConfig"
          nullable: true
        internalLoggingOptions:
          $ref: "#/components/schemas/InternalLoggingOptions"
        retryOptions:
          $ref: "#/components/schemas/RetryOptions"
        sender:
          type: string
          nullable: true
        receiver:
          type: string
          nullable: true
        messageInboundFormat:
          type: string
          nullable: true
        messageInboundEncoding:
          type: string
          nullable: true
        removeBom:
          type: boolean
        handleAsBinaryFile:
          type: boolean
        internalProperties:
          $ref: "#/components/schemas/InternalProperties"
        stopOnEncodingError:
          type: boolean
        pollingIntervalInSeconds:
          type: integer
          format: int32
        intervalExpression:
          type: string
          nullable: true
        enabled:
          type: boolean
        useApiKey:
          type: boolean
        id:
          type: string
          nullable: true
        _etag:
          type: string
          nullable: true
        cosmosEntityName:
          type: string
          nullable: true
          readOnly: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAtUtc:
          type: string
          format: date-time
          nullable: true
        updatedAtUtc:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    IntegrationPostRequest:
      required:
        - companyId
        - configCorrelationId
        - description
        - inboundConnection
        - messageInboundEncoding
        - messageInboundFormat
        - receiver
        - sender
        - subIntegrations
        - subscriptionId
        - transactionType
      type: object
      properties:
        pollingIntervalInSeconds:
          type: integer
          format: int32
        stopOnEncodingError:
          type: boolean
        removeBom:
          type: boolean
        messageInboundEncoding:
          type: string
        messageInboundFormat:
          type: string
        receiver:
          type: string
        sender:
          type: string
        retryOptions:
          $ref: "#/components/schemas/RetryOptions"
        loggingWebhooks:
          type: array
          items:
            $ref: "#/components/schemas/LoggingWebhookConfig"
          nullable: true
        transactionType:
          type: string
        subscriptionId:
          type: string
          format: uuid
        companyId:
          type: string
        subIntegrations:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/SubIntegrationViewModel"
        inboundConnection:
          $ref: "#/components/schemas/AdapterConnectionPropertiesViewModel"
        description:
          minLength: 3
          type: string
        configCorrelationId:
          type: string
          format: uuid
        resendWebhooks:
          type: array
          items:
            $ref: "#/components/schemas/ResendWebhookConfig"
          nullable: true
        enabled:
          type: boolean
      additionalProperties: false
    InternalLoggingOptions:
      type: object
      properties:
        logLevel:
          $ref: "#/components/schemas/LogLevel"
        logMessageContent:
          type: boolean
          nullable: true
        logMetaData:
          type: boolean
          nullable: true
      additionalProperties: false
    InternalProperties:
      type: object
      properties:
        redirectInboundToRetry:
          type: boolean
        redirectBatchingToRetry:
          type: boolean
        redirectSplittingToRetry:
          type: boolean
      additionalProperties: false
    LoggingWebhookConfig:
      type: object
      properties:
        contract:
          $ref: "#/components/schemas/Contract"
        endpointURL:
          type: string
          nullable: true
        httpVerb:
          type: string
          nullable: true
        webhookConnectionId:
          type: string
          nullable: true
        adapterType:
          $ref: "#/components/schemas/AdapterType"
        queryString:
          type: string
          nullable: true
        maxRetries:
          type: integer
          format: int32
        timeout:
          type: integer
          format: int32
        authorizationHeaderKey:
          $ref: "#/components/schemas/Secret"
        type:
          $ref: "#/components/schemas/WebhookType"
        enabled:
          type: boolean
        headers:
          type: object
          additionalProperties:
            type: string
          nullable: true
        logLevel:
          $ref: "#/components/schemas/LogLevel"
        inboundMesssageType:
          type: string
          nullable: true
        outboundMessageType:
          type: string
          nullable: true
        logMessageContent:
          type: boolean
          nullable: true
        transactionTag:
          type: string
          nullable: true
        customInboundDescription:
          type: string
          nullable: true
        customOutboundDescription:
          type: string
          nullable: true
        logMetaData:
          type: boolean
          nullable: true
        useExternalContentService:
          type: boolean
          nullable: true
        sendContentOnExternalServiceFailure:
          type: boolean
          nullable: true
        externalContentServiceWebhook:
          $ref: "#/components/schemas/RestConnectionProperties"
      additionalProperties: false
    LogLevel:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    MessageBodyRequest:
      required:
        - messageBody
      type: object
      properties:
        messageEncoding:
          type: string
          nullable: true
        interchangeId:
          type: string
          nullable: true
        messageBody:
          type: string
          format: byte
        fileName:
          type: string
          nullable: true
      additionalProperties: false
    NextLinkType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    PagingType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    ResendWebhookConfig:
      type: object
      properties:
        contract:
          $ref: "#/components/schemas/Contract"
        endpointURL:
          type: string
          nullable: true
        httpVerb:
          type: string
          nullable: true
        webhookConnectionId:
          type: string
          nullable: true
        adapterType:
          $ref: "#/components/schemas/AdapterType"
        queryString:
          type: string
          nullable: true
        maxRetries:
          type: integer
          format: int32
        timeout:
          type: integer
          format: int32
        authorizationHeaderKey:
          $ref: "#/components/schemas/Secret"
        type:
          $ref: "#/components/schemas/WebhookType"
        enabled:
          type: boolean
        headers:
          type: object
          additionalProperties:
            type: string
          nullable: true
        usePureMessageSending:
          type: boolean
      additionalProperties: false
    RestConnectionProperties:
      type: object
      properties:
        endpointURL:
          type: string
          nullable: true
        httpVerb:
          type: string
          nullable: true
        webhookConnectionId:
          type: string
          nullable: true
        authorizationHeaderType:
          type: string
          nullable: true
        apimSubscriptionKey:
          $ref: "#/components/schemas/Secret"
        oAuthUrl:
          type: string
          nullable: true
        oAuthBody:
          type: string
          nullable: true
        oAuthClientId:
          type: string
          nullable: true
        oAuthClientSecret:
          $ref: "#/components/schemas/Secret"
        headers:
          type: object
          additionalProperties:
            type: string
          nullable: true
        body:
          type: string
          nullable: true
        usePaging:
          type: boolean
        useDateDelta:
          type: boolean
        pagingType:
          $ref: "#/components/schemas/PagingType"
        nextLinkType:
          $ref: "#/components/schemas/NextLinkType"
        pathName:
          type: string
          nullable: true
        oAuthGrantType:
          type: string
          nullable: true
        oAuthUserName:
          type: string
          nullable: true
        oAuthPwd:
          $ref: "#/components/schemas/Secret"
        oAuthResource:
          type: string
          nullable: true
        oAuthScope:
          type: string
          nullable: true
        basicAuthenticationUserName:
          type: string
          nullable: true
        basicAuthenticationPassword:
          $ref: "#/components/schemas/Secret"
        newInternalMessageCorrelationId:
          type: string
          nullable: true
        newInternalMessagePreserveInterchangeId:
          type: boolean
        useFallBackOnRequestFailed:
          type: boolean
        fallBackOnThreeHoundred:
          type: boolean
        fallBackOnFourHoundred:
          type: boolean
        fallBackOnFiveHoundred:
          type: boolean
        restConnectionPropertiesSecondary:
          $ref: "#/components/schemas/RestConnectionProperties"
        useStaticIp:
          type: boolean
        terminateOnDuplicateDetection:
          type: boolean
        duplicateTerminationStatus:
          type: string
          nullable: true
        restResponseErrorHandlingRules:
          type: array
          items:
            $ref: "#/components/schemas/RestResponseErrorHandlingRule"
          nullable: true
      additionalProperties: false
    RestResponseErrorHandlingActionType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    RestResponseErrorHandlingRule:
      type: object
      properties:
        statusCodes:
          type: string
          nullable: true
        action:
          $ref: "#/components/schemas/RestResponseErrorHandlingActionType"
        retry:
          type: boolean
        customStatus:
          type: string
          nullable: true
      additionalProperties: false
    RetryOptions:
      type: object
      properties:
        failureCountIntervalMinutes:
          type: integer
          format: int32
          nullable: true
        reQueueMaxDelaySeconds:
          type: integer
          format: int32
          nullable: true
        reQueueMinDelaySeconds:
          type: integer
          format: int32
          nullable: true
        maxErrorsPerInterval:
          type: integer
          format: int32
          nullable: true
        numberOfRetries:
          type: integer
          format: int32
          nullable: true
        enabled:
          type: boolean
        turnOffErrorPersistance:
          type: boolean
        maxDelayActions:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    Secret:
      type: object
      properties:
        decryptedValue:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
      additionalProperties: false
    SubIntegration:
      type: object
      properties:
        subIntegrationId:
          type: string
          nullable: true
        subintegrationName:
          type: string
          nullable: true
        sender:
          type: string
          nullable: true
        receiver:
          type: string
          nullable: true
        loggingWebhookOverrides:
          $ref: "#/components/schemas/SubintegrationLoggingConfigOverride"
        transformations:
          type: array
          items:
            $ref: "#/components/schemas/TransformationAction"
          nullable: true
        passThrough:
          type: boolean
        outboundConnections:
          type: array
          items:
            $ref: "#/components/schemas/AdapterConnectionProperties"
          nullable: true
        messageOutboundFormat:
          type: string
          nullable: true
        messageOutboundEncoding:
          type: string
          nullable: true
        internalProperties:
          $ref: "#/components/schemas/InternalProperties"
        enabled:
          type: boolean
        preDefinedUserProperties:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
    SubintegrationLoggingConfigOverride:
      type: object
      properties:
        logLevel:
          $ref: "#/components/schemas/LogLevel"
        inboundMesssageType:
          type: string
          nullable: true
        outboundMessageType:
          type: string
          nullable: true
        logMessageContent:
          type: boolean
          nullable: true
        transactionTag:
          type: string
          nullable: true
        customInboundDescription:
          type: string
          nullable: true
        customOutboundDescription:
          type: string
          nullable: true
        logMetaData:
          type: boolean
          nullable: true
        enabled:
          type: boolean
      additionalProperties: false
    SubIntegrationViewModel:
      required:
        - messageOutboundFormat
        - outboundConnections
        - subIntegrationId
      type: object
      properties:
        subIntegrationId:
          type: string
          format: uuid
        subintegrationName:
          type: string
          nullable: true
        receiver:
          type: string
          nullable: true
        loggingWebhookOverrides:
          $ref: "#/components/schemas/SubintegrationLoggingConfigOverride"
        transformations:
          type: array
          items:
            $ref: "#/components/schemas/TransformationActionViewModel"
          nullable: true
        passThrough:
          type: boolean
        outboundConnections:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/AdapterConnectionPropertiesViewModel"
        messageOutboundFormat:
          type: string
        messageOutboundEncoding:
          type: string
          nullable: true
        preDefinedUserProperties:
          type: object
          additionalProperties:
            type: string
          nullable: true
        enabled:
          type: boolean
      additionalProperties: false
    TransformationAction:
      type: object
      properties:
        id:
          type: string
          nullable: true
        transformationType:
          type: string
          nullable: true
        transformationName:
          type: string
          nullable: true
        properties:
          type: string
          nullable: true
      additionalProperties: false
    TransformationActionViewModel:
      required:
        - properties
        - transformationType
      type: object
      properties:
        transformationType:
          type: string
        transformationName:
          type: string
          nullable: true
        properties:
          type: string
      additionalProperties: false
    WebhookType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
    WrapperType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/0b933fc9-3391-4302-9d86-85fe9bb5370e/oauth2/authorize
          scopes:
            user_impersonation: Access API
    connxio-api-key:
      type: apiKey
      description: API Key for Connxio API
      name: Connxio-Api-Key
      in: header
security: [{ connxio-api-key: [], oauth2: [] }]
servers: [{ url: https://app-cx-ratchet-api.azurewebsites.net/ }]
# security:
#   - connxio-api-key: []
#     oauth2:
#       - readAccess
#       - writeAccess
