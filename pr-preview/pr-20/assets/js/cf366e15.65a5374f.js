"use strict";(self.webpackChunkconnxio_docs=self.webpackChunkconnxio_docs||[]).push([[1643],{5472:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>r,default:()=>l,frontMatter:()=>d,metadata:()=>c,toc:()=>o});var t=n(5893),i=n(1151);const d={sidebar_position:3,title:"Send a batch of messages"},r="Send a batch of messages",c={id:"reference/messages/send-batch",title:"Send a batch of messages",description:"Use this endpoint when sending a batch of messages. This endpoint is recommended when sending multiple messages at once, but can also be used when sending a single message.",source:"@site/../docs/reference/messages/send-batch.mdx",sourceDirName:"reference/messages",slug:"/reference/messages/send-batch",permalink:"/reference/messages/send-batch",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Send a batch of messages"},sidebar:"connxioSidebar",previous:{title:"Send a single message",permalink:"/reference/messages/send-single-message"},next:{title:"Send an Event Grid message",permalink:"/reference/messages/send-event-grid"}},a={},o=[{value:"<strong>Example request</strong>",id:"example-request",level:3}];function h(e){const s={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"send-a-batch-of-messages",children:"Send a batch of messages"}),"\n",(0,t.jsx)(s.p,{children:"Use this endpoint when sending a batch of messages. This endpoint is recommended when sending multiple messages at once, but can also be used when sending a single message."}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"URL:"})," ",(0,t.jsx)(s.code,{children:"https://api.connxio.no/messages/:integrationConfigId/batch"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Method:"})," ",(0,t.jsx)("span",{class:"method post",children:"POST"})]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Route Parameters:"})}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Key"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"integrationConfigId"}),(0,t.jsx)(s.td,{children:"string"}),(0,t.jsx)(s.td,{children:"The ID of the integration configuration to use when sending the message."})]})})]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Request body:"})}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Key"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Optional"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"messageBody"}),(0,t.jsx)(s.td,{children:"binary/base64"}),(0,t.jsx)(s.td,{children:"no"}),(0,t.jsx)(s.td,{children:"The message body to send."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"messageEncoding"}),(0,t.jsx)(s.td,{children:"string"}),(0,t.jsx)(s.td,{children:"yes"}),(0,t.jsx)(s.td,{children:"The encoding of the message. Defaults to UTF-8 if not specified"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"interchangeId"}),(0,t.jsx)(s.td,{children:"string"}),(0,t.jsx)(s.td,{children:"yes"}),(0,t.jsx)(s.td,{children:"Sets the interchange ID associated with the message. A random unique ID is generated if not provided."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"fileName"}),(0,t.jsx)(s.td,{children:"string"}),(0,t.jsx)(s.td,{children:"yes"}),(0,t.jsx)(s.td,{children:"Used for logging purposes and specifies the filename of the message."})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"example-request",children:(0,t.jsx)(s.strong,{children:"Example request"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'// POST https://api.connxio.no/messages/6cd585f1-e408-4f00-9253-76b717ab12de\n\n// REQUEST BODY\n[\n  {\n    "messageEncoding": "ASCII",\n    "interchangeId": null,\n    "messageBody": "eyAiZm9vIjogImJhciIgfQ==",\n    "fileName": "file.json"\n  }\n]\n\n// RESPONSE\n200 OK\n'})})]})}function l(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>r});var t=n(7294);const i={},d=t.createContext(i);function r(e){const s=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(d.Provider,{value:s},e.children)}}}]);